@page "/Patients"
@inject IDialogService DialogServices
@* @inject MudBlazor.DialogService DialogService;*@
@inject ISnackbar SnackBarService;
@inject IDefaultOperationDbEntity<Patient> patientServ;
@inject PatientOperationService patientFullDataService;
@inject Services.CookiesService cookieService;
@using System.Net.Http.Json
@using DataBase.Entities
@using DataBase.Operations
<MudGrid Spacing="6">
    <MudItem xs="3">
        <MudStack>
            <MudText class="pa-4 m-16" Align="Align.Center" Color="Color.Primary" Typo="Typo.h5">Настройки</MudText>
            <MudTreeView T="string">
                <MudTreeViewItem Text="Отображение полей">
                    <MudTreeView CheckBoxColor="Color.Info" Text="Отображение полей">
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="DateOfBirthColumnVisible" Label="Дата рождения"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="@adressColumnVisible" Label="Адрес"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="workAdressColumnVisible" Label="Рабочий адрес"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="telephoneColumnVisible" Label="Телефон" />
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="passportColumnVisible" Label="Паспорт" />
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="genreColumnVisible" Label="Пол"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="mailColumnVisible" Label="Почта"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="insuranceNumberVisible" Label="Номер полиса"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="insuranceEndVisible" Label="Срок окончания полиса"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                        <MudTreeViewItem>
                            <Content>
                                <MudCheckBox @bind-Value="medCardCreateVisible" Label="Дата получения полиса"></MudCheckBox>
                            </Content>
                        </MudTreeViewItem>
                    </MudTreeView>
                </MudTreeViewItem>
            </MudTreeView>
        </MudStack>
    </MudItem>
    <MudItem xs="8">
        <MudPaper class="pa-5 ma-2" style="height: 80vh" Outlined="true">
            <MudDataGrid Items="@patients">
                <Columns>
                    <PropertyColumn Property="x => x.Patient.FullName" Title="ФИО" />
                    <PropertyColumn Property="x => x.Patient.DateOfBirth" Format="dd-.MM-yyyy" Hidden="@(!dateOfBirthColumnVisible)" Title="Дата рождения" />
                    <PropertyColumn Property="x => x.Patient.Address" Hidden="@(!adressColumnVisible)" Title="Адрес" />
                    <PropertyColumn Property="x => x.Patient.WorkAddress" Hidden="@(!workAdressColumnVisible)" Title="Рабочий адрес" />
                    <PropertyColumn Property="x => x.Patient.Telephone" Hidden="@(!telephoneColumnVisible)" Title="Телефон" />
                    <PropertyColumn Property="x => x.Patient.Email" Hidden="@(!mailColumnVisible)" Title="Почта" />
                    <PropertyColumn Property="x => x.Patient.Genre.Name" Hidden="@(!genreColumnVisible)" Title="Пол" />
                    <PropertyColumn Property="x => x.Patient.Passport" Hidden="@(!passportColumnVisible)" Title="Паспорт" />
                    <PropertyColumn Property="x => x.InsurancePolicy.Number" Hidden="@(!insuranceNumberVisible)" Title="Номер полиса" />
                    <PropertyColumn Property="x => x.InsurancePolicy.End" Format="dd.MM.yyyy" Hidden="@(!insuranceEndVisible)" Title="Срок окончания полиса" />
                    <PropertyColumn Property="x => x.MedCard.Created" Format="dd.MM.yyyy" HiddFormat="dd.MM.yyyy" en="@(!medCardCreateVisible)" Title="Дата создания мед карты" />
                </Columns>
            </MudDataGrid>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" Style="height: 10vh">
        <MudGrid Justify="Justify.Center">
            <MudButton OnClick="OpenDialogAddPatient" Color="Color.Primary">Добавить</MudButton>
        </MudGrid>
    </MudItem>
</MudGrid>

@code {
    bool dateOfBirthColumnVisible = true;
    bool DateOfBirthColumnVisible
    {
        get => dateOfBirthColumnVisible; set

        {
            dateOfBirthColumnVisible = value;
            cookieService.SetCookie(Services.CookiesService.Keys.dateOfBirthColumnVisible, dateOfBirthColumnVisible.ToString(), 31);
        }
    }
    bool telephoneColumnVisible = true;
    bool mailColumnVisible = false;
    bool passportColumnVisible = false;
    bool adressColumnVisible = true;
    bool workAdressColumnVisible = false;
    bool genreColumnVisible = false;
    bool insuranceNumberVisible = false;
    bool insuranceEndVisible = false;
    bool medCardCreateVisible = false;



    bool isTest = true;


    public int _spcaing = 6;
    public List<DataBase.Models.PatientFullData> patients = new();

    async Task LoadCookieVisibleColumn()
    {
        var data = cookieService.GetCookie(Services.CookiesService.Keys.dateOfBirthColumnVisible, Services.CookiesService.Types.@bool);
        if (data != null)
            DateOfBirthColumnVisible = (bool)data;
    }

    protected override async Task OnInitializedAsync()
    {
        await AutoUpdateTable();
        await LoadCookieVisibleColumn();
    }

    private async Task AutoUpdateTable()
    {
        await Task.Run(async () =>
         {
             while (true)
             {
                 var patients = await GetPatients();
                 await InvokeAsync(() => SetPatients(patients));
                 if (isTest) SnackBarService.Add("TEST:Таблица обновлена");
                 await Task.Delay(3000); // 10 second
             }
         });
    }


    async Task<List<DataBase.Models.PatientFullData>> GetPatients() => await patientFullDataService.GetFullData();




    void SetPatients(List<DataBase.Models.PatientFullData> patients)
    {
        this.patients = patients;
        StateHasChanged();
    }


    public Task OpenDialogAddPatient()
    {
        var options = new MudBlazor.DialogOptions() { CloseOnEscapeKey = true };
        return DialogServices.ShowAsync<Dialogs.PatientAdd>("test", options);
    }
}
